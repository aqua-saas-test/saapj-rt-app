default:
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
    - docker login -u $AQUA_REGISTRY_USER -p $AQUA_REGISTRY_PASSWORD registry.aquasec.com
stages:
  - aqua-code-scan
  - build
  - aqua-image-scan
  - push
  - SBOM-Generation
  
variables:
  # Use TLS https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#tls-enabled
  CONTAINER_IMAGE_NAME: aquasaapj/saapj-rt-app
  CONTAINER_TAG_NUMBER: $CI_PIPELINE_IID
  CONTAINER_TEST_IMAGE: $CONTAINER_IMAGE_NAME:$CONTAINER_TAG_NUMBER
  CONTAINER_IMAGE_LATEST: $CONTAINER_IMAGE_NAME:latest

Aqua-scanner:
  stage: aqua-code-scan
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  image: aquasec/aqua-scanner
  script:
    - export AQUA_KEY=$AQUA_KEY
    - export AQUA_SECRET=$AQUA_SECRET
    - export GITLAB_TOKEN=$GITLAB_TOKEN
    - export AQUA_URL=https://api.supply-chain.cloud.aquasec.com
    - export CSPM_URL=https://api.cloudsploit.com
    - export TRIVY_RUN_AS_PLUGIN=aqua
    - trivy fs --scanners config,vuln,secret --sast --reachability .
    # To customize which severities to scan for, add the following flag: --severity UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL
    # To enable SAST scanning, add: --sast
    # To enable reachability scanning, add: --reachability
    # To enable npm/dotnet non-lock file scanning, add: --package-json / --dotnet-proj
    # For http/https proxy configuration add env vars: HTTP_PROXY/HTTPS_PROXY, CA-CRET (path to CA certificate)
    # Test

build:
  stage: build
  script:
    - docker build -t $CONTAINER_TEST_IMAGE .

aqua-image-scan:
    stage: aqua-image-scan
    script:
      - mkdir reports
      - docker run --rm -v /var/run/docker.sock:/var/run/docker.sock registry.aquasec.com/scanner:2022.4 scan --register --registry "Docker Hub" --host $AQUA_HOST --local $CONTAINER_TEST_IMAGE --token $AQUA_TOKEN --layer-vulnerabilities --no-verify --html > reports/scan-output.html
    artifacts:
      paths:
      - reports

push:
    stage: push
    script:
      - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_IMAGE_LATEST
      - docker push $CONTAINER_TEST_IMAGE
      - docker push $CONTAINER_IMAGE_LATEST

SBOM-Generation:
  stage: SBOM-Generation
  script:
    - export BILLY_SERVER=https://billy.codesec.aquasec.com
    - curl -sLo install.sh download.codesec.aquasec.com/billy/install.sh
    - curl -sLo install.sh.checksum https://github.com/argonsecurity/releases/releases/latest/download/install.sh.checksum
    - |
      if ! cat install.sh.checksum | sha256sum ; then
        echo "install.sh checksum failed"
        exit 1
      fi
      BINDIR="." sh install.sh
      rm install.sh install.sh.checksum
    - ./billy generate /
        --access-token $GITLAB_TOKEN /
        --aqua-key $AQUA_KEY /
        --aqua-secret $AQUA_SECRET /
        --cspm-url https://api.cloudsploit.com /
        --artifact-path "$CONTAINER_TEST_IMAGE"
